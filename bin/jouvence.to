#!/usr/bin/env node

var fs = require('fs');
var path = require('path');

var supportedExtensions = [".html", ".json"];

// Script to convert a fountian file to something else
// the nature of the generated file is based on the 
// extension used for the output file

var argv = require('minimist')(process.argv.slice(2));

function usage(message, err) {
    if (message) {
        console.log(message)
    }
    if (err) {
        console.log("ERROR:\n", err);
        if (err.stack) {
            console.log(err.stack);
        }
    }

    console.log("\n");
    console.log("Usage: bin/jouvence.to --input <jouvence file> --output <result file> --config <json configuration file>");
    process.exit(1);
}

var inputFile = argv["input"] || usage();
var outputFile = argv["output"] || usage();
var configFile = argv["config"];


// check with extension of the file to guess
// the transformation required
var ext = path.extname(outputFile);

if (supportedExtensions.indexOf(ext) < 0) {
    console.log("Invalid extension:" + ext);
    console.log("Supported extensions are:");
    supportedExtensions.forEach(function(e) {
        console.log(e);
    });
    process.exit(1);
}

var readStream = fs.createReadStream(inputFile, {
    encoding: 'utf8'
});

var writeStream = fs.createWriteStream(outputFile, {
    encoding: 'utf8'
});

if (ext === ".html") {
    // HTML converter
    if (!configFile) {
        usage("A config file is required for an HTML conversion");
    }
    try {
        fs.readFile(configFile, 'utf8', function(err, data) {
            if (err) {
                usage("Can't read json file:" + configFile, err);
            }

            var toHTML = require("../lib/toHTML");
            var config = JSON.parse(data);

            toHTML(readStream, writeStream, config).then(function() {
                console.log("Done!")
            }).catch(function(err) {
                console.log("Error processing file:", err);
                console.log(err.stack);
            });

        })
    }
    catch (err) {
        usage("Can't convert to HTML with config file:" + configFile, err);
    };
}
else if (ext === ".json") {

    var toJSON = require("../lib/toJSON");
    var util = require('util');

    toJSON(readStream, -1, true).then(function(json) {
        writeStream.write(util.inspect(json, {
            showHidden: false,
            depth: null
        }));
    }).catch(function(err) {
        console.log("Error processing file:", err);
        console.log(err.stack);
    });

}
